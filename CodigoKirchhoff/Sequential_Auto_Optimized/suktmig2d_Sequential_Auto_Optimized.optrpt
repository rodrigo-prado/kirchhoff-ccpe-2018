Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: main(int, char **)

    Report from: Vector optimizations [vec]


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(181,2)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(181,2)
   remark #15389: vectorization support: reference fc has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(182,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 8
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 0.171
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 35 
   remark #15477: vector loop cost: 4.750 
   remark #15478: estimated potential speedup: 5.830 
   remark #15487: type converts: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(181,2)
<Remainder loop for vectorization>
   remark #15389: vectorization support: reference fc has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(182,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.390
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(181,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(196,3)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(296,3)
   remark #15382: vectorization support: call to function efread(void *, size_t, size_t, FILE *) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(297,4) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(378,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   <Multiversioned v1>
      remark #15389: vectorization support: reference rtin has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(389,4) ]
      remark #15389: vectorization support: reference data has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(389,4) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 10 
      remark #15477: vector loop cost: 0.500 
      remark #15478: estimated potential speedup: 10.830 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(392,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Peeled loop for vectorization, Distributed chunk1>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Distributed chunk1>
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(567,3) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.833
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 33 
         remark #15477: vector loop cost: 0.750 
         remark #15478: estimated potential speedup: 27.120 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Remainder loop for vectorization, Distributed chunk1>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Distributed chunk2>
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.126
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 403 
         remark #15477: vector loop cost: 37.750 
         remark #15478: estimated potential speedup: 10.650 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 6 
         remark #15488: --- end vector loop cost summary ---

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between filter line 573 and filter line 573
            remark #15346: vector dependence: assumed OUTPUT dependence between filter line 573 and filter line 573
            remark #15548: loop was vectorized along with the outer loop
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Remainder loop for vectorization, Distributed chunk2>

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(398,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         remark #15382: vectorization support: call to function crmul(complex, float) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(399,27) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(403,5) ]
         remark #15389: vectorization support: reference rtout has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(403,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 4.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 10 
         remark #15477: vector loop cost: 0.500 
         remark #15478: estimated potential speedup: 10.600 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(408,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(419,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(451,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(452,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(452,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 8 
            remark #15477: vector loop cost: 0.750 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(451,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(457,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(458,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(458,7) ]
            remark #15389: vectorization support: reference datahi has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(459,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(459,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15451: unmasked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 16 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(457,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(468,4) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(510,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(511,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(511,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 8 
            remark #15477: vector loop cost: 0.750 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(510,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(516,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(517,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(517,7) ]
            remark #15389: vectorization support: reference datahi has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(518,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(518,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15451: unmasked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 17 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 5.660 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(516,6) inlined into suktmig2d_Sequential_Auto_Optimized.c(303,3)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(306,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(308,4)
   <Multiversioned v1>
      remark #15388: vectorization support: reference outtrace.data has aligned access   [ suktmig2d_Sequential_Auto_Optimized.c(309,5) ]
      remark #15389: vectorization support: reference mig has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(309,5) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 0.750
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 8 
      remark #15477: vector loop cost: 0.500 
      remark #15478: estimated potential speedup: 15.970 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(308,4)
   <Remainder loop for vectorization, Multiversioned v1>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(308,4)
   <Multiversioned v2>
      remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(308,4)
   <Remainder, Multiversioned v2>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(308,4)
   <Peeled loop for vectorization, Multiversioned v1>
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(191,2)
   remark #15533: loop was not vectorized: loop exceeds complexity limits. Consider overriding limits (-override-limits) or using simd directive.
LOOP END
===========================================================================

Begin optimization report for: migkt2d(const float *const *__restrict__, const int, const int, const float, const float, const float, const int, const float, const float, const float *__restrict__, const int, const int, const int, const int, const float, const float *const *__restrict__, float **__restrict__, const int, const int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(378,2)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3)
      remark #15389: vectorization support: reference rtin has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(389,4) ]
      remark #15389: vectorization support: reference data has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(389,4) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 8
      remark #15309: vectorization support: normalized vectorization overhead 3.250
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 10 
      remark #15477: vector loop cost: 0.500 
      remark #15478: estimated potential speedup: 10.830 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(388,3)
   <Remainder loop for vectorization>
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(392,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
      <Peeled loop for vectorization, Distributed chunk1>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
      <Distributed chunk1>
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(567,3) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.833
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 33 
         remark #15477: vector loop cost: 0.750 
         remark #15478: estimated potential speedup: 27.120 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
      <Remainder loop for vectorization, Distributed chunk1>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
      <Distributed chunk2>
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
         remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 4
         remark #15309: vectorization support: normalized vectorization overhead 0.126
         remark #15301: PARTIAL LOOP WAS VECTORIZED
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 403 
         remark #15477: vector loop cost: 37.750 
         remark #15478: estimated potential speedup: 10.650 
         remark #15482: vectorized math library calls: 1 
         remark #15487: type converts: 6 
         remark #15488: --- end vector loop cost summary ---

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization
            remark #15346: vector dependence: assumed OUTPUT dependence between filter line 573 and filter line 573
            remark #15346: vector dependence: assumed OUTPUT dependence between filter line 573 and filter line 573
            remark #15548: loop was vectorized along with the outer loop
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
      <Remainder loop for vectorization, Distributed chunk2>

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3) inlined into suktmig2d_Sequential_Auto_Optimized.c(395,4)
            remark #25460: No loop optimizations reported
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(398,4)
         remark #15382: vectorization support: call to function crmul(complex, float) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(399,27) ]
         remark #15344: loop was not vectorized: vector dependence prevents vectorization
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4)
      <Peeled loop for vectorization>
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4)
         remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(403,5) ]
         remark #15389: vectorization support: reference rtout has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(403,5) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 8
         remark #15309: vectorization support: normalized vectorization overhead 4.750
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 10 
         remark #15477: vector loop cost: 0.500 
         remark #15478: estimated potential speedup: 10.600 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(402,4)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(408,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(419,4)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(451,6)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(452,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(452,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 8 
            remark #15477: vector loop cost: 0.750 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(451,6)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(457,6)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(458,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(458,7) ]
            remark #15389: vectorization support: reference datahi has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(459,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(459,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15451: unmasked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 16 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(457,6)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END

      LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(468,4)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(510,6)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(511,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(511,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 8 
            remark #15477: vector loop cost: 0.750 
            remark #15478: estimated potential speedup: 5.330 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(510,6)
         <Remainder loop for vectorization>
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(516,6)
            remark #15389: vectorization support: reference datalo has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(517,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(517,7) ]
            remark #15389: vectorization support: reference datahi has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(518,7) ]
            remark #15389: vectorization support: reference lowpass has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(518,7) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 8
            remark #15309: vectorization support: normalized vectorization overhead 1.000
            remark #15300: LOOP WAS VECTORIZED
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15451: unmasked unaligned unit stride stores: 2 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 17 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 5.660 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(516,6)
         <Remainder loop for vectorization>
         LOOP END
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: lpfilt(int, int, float, float, float *__restrict__)

    Report from: Vector optimizations [vec]


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2)
<Peeled loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2)
<Distributed chunk1>
   remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(567,3) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15399: vectorization support: unroll factor set to 2
   remark #15309: vectorization support: normalized vectorization overhead 1.833
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 33 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 27.120 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2)
<Remainder loop for vectorization, Distributed chunk1>
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2)
<Distributed chunk2>
   remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
   remark #15389: vectorization support: reference filter has unaligned access   [ suktmig2d_Sequential_Auto_Optimized.c(573,4) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.126
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 403 
   remark #15477: vector loop cost: 37.750 
   remark #15478: estimated potential speedup: 10.650 
   remark #15482: vectorized math library calls: 1 
   remark #15487: type converts: 6 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between filter line 573 and filter line 573
      remark #15346: vector dependence: assumed ANTI dependence between filter line 573 and filter line 573
      remark #15548: loop was vectorized along with the outer loop
   LOOP END
LOOP END

LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(565,2)
<Remainder loop for vectorization, Distributed chunk2>

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(570,3)
      remark #25460: No loop optimizations reported
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: gravar_dados(float **, int, int, int, char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(584,2)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(586,3) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(588,4) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(590,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, line 586 and call:fprintf(FILE *__restrict__, line 590
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 590 and  line 586

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(587,3)
      remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(588,4) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:fprintf(FILE *__restrict__, line 588 and mig line 588
      remark #15346: vector dependence: assumed ANTI dependence between mig line 588 and call:fprintf(FILE *__restrict__, line 588
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: gravar_velocidade(float **, int, int, int, char *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(602,2)
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(604,3) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(606,4) ]
   remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(608,3) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between call:fprintf(FILE *__restrict__, line 604 and call:fprintf(FILE *__restrict__, line 608
   remark #15346: vector dependence: assumed OUTPUT dependence between  line 608 and  line 604

   LOOP BEGIN at suktmig2d_Sequential_Auto_Optimized.c(605,3)
      remark #15382: vectorization support: call to function fprintf(FILE *__restrict__, const char *__restrict__, ...) cannot be vectorized   [ suktmig2d_Sequential_Auto_Optimized.c(606,4) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between call:fprintf(FILE *__restrict__, line 606 and vel line 606
      remark #15346: vector dependence: assumed ANTI dependence between vel line 606 and call:fprintf(FILE *__restrict__, line 606
   LOOP END
LOOP END
===========================================================================
